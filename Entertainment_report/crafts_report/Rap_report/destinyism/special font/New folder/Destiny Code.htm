<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style media="screen">

@font-face {
  font-family: 'On-AirRegular';
  src: url('http://b-blog.test/font-spydolls/1.ttf');
}

.font {
  font-family: 'On-AirRegular';
  font-size: 10em;
  padding: 1em;
}
</style>

</head><body><div class="font">
  Blue Gem
</div>




<style>
  /* Small Devices, Tablets */
  @media  only screen and (min-width: 768px) {
    .g-multi-level-dropdown ul{list-style:none;padding:0;margin:0;background:#1bc2a2;}
    .g-multi-level-dropdown ul li{display:block;position:relative;float:left;background:#1bc2a2;}
    /* This hides the dropdowns */
    .g-multi-level-dropdown li ul{display:none;}
    .g-multi-level-dropdown ul li a{display:block;padding:1em;text-decoration:none;white-space:nowrap;color:#fff;}
    .g-multi-level-dropdown ul li a:hover{background:#2c3e50;}
    /* Display the dropdown */
    .g-multi-level-dropdown li:hover > ul{display:block;position:absolute;}
    .g-multi-level-dropdown li:hover li{float:none;}
    .g-multi-level-dropdown li:hover a{background:#1bc2a2;}
    .g-multi-level-dropdown li:hover li a:hover{background:#2c3e50;}
    .g-multi-level-dropdown > ul li ul li{border-top:0;}
    /* Displays second level dropdowns to the right of the first level dropdown */
    .g-multi-level-dropdown ul ul ul{left:100%;top:0;}
    /* Simple clearfix */
    .g-multi-level-dropdown ul:before, .g-multi-level-dropdown ul:after{content:" "; display:table;}
    .g-multi-level-dropdown ul:after{clear:both;}
  }
  @media  only screen and (max-width: 768px) {
    /** * Framework starts from here ... * ------------------------------ */
     .g-multi-level-dropdown > ul, .g-multi-level-dropdown > ul ul{margin:0 0 0 1em;padding:0;list-style:none;color:#369;position:relative;}
     .g-multi-level-dropdown > ul ul{margin-left:.5em}
     /* (indentation/2) */
     .g-multi-level-dropdown > ul:before, .g-multi-level-dropdown > ul ul:before{content:"";display:block;width:0;position:absolute;top:0;bottom:0;left:0;border-left:1px solid;}
     .g-multi-level-dropdown > ul li{margin:0;padding:0 1.5em;line-height:2em;font-weight:bold;position:relative;}
     .g-multi-level-dropdown > ul li:before{content:"";display:block;width:10px;height:0;border-top:1px solid;margin-top:-1px;position:absolute;top:1em;left:0;}
     .g-multi-level-dropdown > ul li:last-child:before{background:white;height:auto;top:1em;bottom:0;}
  }
  @media  only screen and (max-width: 768px) {
    .g-resp-sm-hide {display: none;}
  }
</style>



<link rel="stylesheet" href="Destiny%20Code_files/jsoneditor.css">



<div class="g-multi-level-dropdown">
        <ul>
    
                  <li><a href="">Education <span class="g-resp-sm-hide">+</span></a>    <ul>
    
                  <li><a href="http://b-blog.test/view/Education/Destiny%20Code">Destiny Code</a></li>
                        <li><a href="http://b-blog.test/view/Education/Graft%20Your%20Garden">Graft Your Garden</a></li>
              
    </ul>
  </li>
                        <li><a href="http://b-blog.test/view/General%20info">General info</a></li>
                        <li><a href="http://b-blog.test/view/Victorious%20Veggies">Victorious Veggies</a></li>
              
    </ul>
  </div>
<br>
<a href="http://b-blog.test/edit/Education/Destiny%20Code">edit</a>
<br>
<div class="" style="background-color: rgb(200,200,200); padding: 1em; width: 100%; height: 200px;">

    surname 1: Destiny codes surname is Code<br>

  surname 2: my surname is garden<br>
</div>
</body><script>(function (AESD) {
  var core = {
    "log": false,
    "whitelist": function (status) {
      window.postMessage({
        "app": "audio-equalizer",
        "action": "page-whitelist",
        "value": {
          "status": status,
          "action": "page-whitelist"
        }
      }, '*');
    },
    "hostname": function (url) {
      if ("blob:" === url.substring(0, 5)) {
        url = url.replace("blob:", '');
        url = unescape(url);
      }
      /*  */
      var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
      var flag = (match !== null) && (match.length > 2) && (typeof match[2] === "string") && (match[2].length > 0);
      return flag ? match[2] : null;
    },
    "equalizer": {
      "targets": [],
      "filters": [],
      "storage": {},
      "audioContext": null,
      "gain": function () {
        var filter = core.equalizer.audioContext.createGain();
        filter.channelCountMode = "explicit";
        filter.gain.value = 1;
        return filter;
      },
      "biquad": function (e) {
        var filter = core.equalizer.audioContext.createBiquadFilter();
        filter.type = e.type || core.equalizer.storage.FT.LOWPASS;
        filter.frequency.value = e.f || 0;
        filter.gain.value = e.gain || 0;
        filter.Q.value = 1;
        return filter;
      },
      "set": function (o) {
        if (o) {
          if (o.eq && o.config) {
            if (core.equalizer.filters.length > 0) {
              if (core.equalizer.filters[0]) {
                core.equalizer.filters[0].channelCount = o.config.mono ? 1 : (core.equalizer.filters[0]._defaultChannelCount ? core.equalizer.filters[0]._defaultChannelCount : 2);
                core.equalizer.filters.forEach(function (f, i) {f.gain.value = o.eq[i].gain});
              }
            }
          }
        }
      },
      "load": function () {
        if (core.log) console.error(" >> Searching for video/audio elements...");
        core.equalizer.filters = [];
        delete core.equalizer.audioContext;
        /*  */
        core.equalizer.audioContext = new AudioContext();
        for (var i = 0; i < core.equalizer.storage.eq.length; i++) {
          var node = core.equalizer.storage.eq[i];
          var filter = node.f ? core.equalizer.biquad(node) : core.equalizer.gain();
          if (filter) core.equalizer.filters.push(filter);
        }
        /*  */
        if (core.log) console.error(" >> Equalizer is loaded!");
        core.equalizer.attach(2);
      },
      "attach": function (w) {		
        if (!core.equalizer.audioContext) core.equalizer.load();
        else {
          core.equalizer.targets.forEach(function (t, k) {
            if (t.getAttribute("equalizer-state") !== "attached") {
              var src = (t.src ? t.src : t.currentSrc);
              var crossorigin = t.getAttribute("crossorigin");
              if (src) {
                t.setAttribute("equalizer-state", "attached");
                if (core.log) console.error(" >> Equalizer is attached, loc", w, t.className);
                if (!crossorigin && document.location.hostname !== core.hostname(src) && src.substring(0, 5) !== "blob:") {
                  t.setAttribute('crossorigin', (crossorigin ? crossorigin : "anonymous"));
                  if (t.src) t.src = t.src + '';
                  else if (t.currentSrc) t.load();
                }
                /*  */
                var source = core.equalizer.audioContext.createMediaElementSource(t);
                core.equalizer.filters[0]._defaultChannelCount = (source.channelCount) ? source.channelCount : 2;
                source.connect(core.equalizer.filters[0]);
                /*  */
                for (var i = 0; i < core.equalizer.filters.length; i++) {
                  var next = core.equalizer.filters[i + 1];
                  var current = core.equalizer.filters[i];
                  if (next) current.connect(next);
                }
                /*  */
                var last = core.equalizer.filters.length - 1;
                core.equalizer.filters[last].connect(core.equalizer.audioContext.destination);
              }
            }
          });
        }
      }
    }
  };
  /*  */
  core.equalizer.storage = AESD;
  /*  */
  window.addEventListener("message", function (e) {
    if (e.data.app === "audio-equalizer") {
      if (e.data.action === "app-set") core.equalizer.set(e.data.value);
      if (e.data.action === "page-whitelist-enable") core.whitelist(e.data.value);
      if (e.data.action === "page-whitelist-disable") core.whitelist(e.data.value);
    }
  }, false);
  /*  */
  window.addEventListener("play", function (e) {
    core.equalizer.targets.push(e.target);
    core.equalizer.attach(0);
  }, true);
  /*  */
  if (Audio) {
    if (Audio.prototype) {
      if (Audio.prototype.play) {
        const PROTO = Audio.prototype.play;
        Audio.prototype.play = function () {
          core.equalizer.targets.push(this);
          core.equalizer.attach(1);
          /*  */
          return PROTO.apply(this, arguments);
        };
      }
    }
  }
})({"eq":[{"label":"master","gain":1},{"label":"64","f":64,"gain":0,"type":"peaking"},{"label":"32","f":32,"gain":0,"type":"lowshelf"},{"label":"125","f":125,"gain":4.8,"type":"peaking"},{"label":"250","f":250,"gain":3.36,"type":"peaking"},{"label":"500","f":500,"gain":3.36,"type":"peaking"},{"label":"1k","f":1000,"gain":3.36,"type":"peaking"},{"label":"2k","f":2000,"gain":1.92,"type":"peaking"},{"label":"4k","f":4000,"gain":0,"type":"peaking"},{"label":"8k","f":8000,"gain":0,"type":"peaking"},{"label":"16k","f":16000,"gain":0,"type":"highshelf"}],"config":{"snap":false,"mono":false},"presets":[{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]},{"name":"Live","default":true,"gains":[-2.88,0,2.4,3.36,3.36,3.36,2.4,1.44,1.44,1.44]},{"name":"Party","default":true,"gains":[4.32,4.32,0,0,0,0,0,0,4.32,4.32]},{"name":"Pop","default":true,"gains":[0.96,2.88,4.32,4.8,3.36,0,-1.44,-1.44,0.96,0.96]},{"name":"Soft","default":true,"gains":[2.88,0.96,0,-1.44,0,2.4,4.8,5.76,6.72,7.2]},{"name":"Ska","default":true,"gains":[-1.44,-2.88,-2.4,0,2.4,3.36,5.28,5.76,6.72,5.76]},{"name":"Reggae","default":true,"gains":[0,0,0,-3.36,0,3.84,3.84,0,0,0]},{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},{"name":"Rock","default":true,"gains":[4.8,2.88,-3.36,-4.8,-1.92,2.4,5.28,6.72,6.72,6.72]},{"name":"Dance","default":true,"gains":[5.76,4.32,1.44,0,0,-3.36,-4.32,-4.32,0,0]},{"name":"Techno","default":true,"gains":[4.8,3.36,0,-3.36,-2.88,0,4.8,5.76,5.76,5.28]},{"name":"Headphones","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Soft rock","default":true,"gains":[2.4,2.4,1.44,0,-2.4,-3.36,-1.92,0,1.44,5.28]},{"name":"Classical","default":true,"gains":[0,0,0,0,0,0,-4.32,-4.32,-4.32,-5.76]},{"name":"Large Hall","default":true,"gains":[6.24,6.24,3.36,3.36,0,-2.88,-2.88,-2.88,0,0]},{"name":"Full Bass","default":true,"gains":[4.8,5.76,5.76,3.36,0.96,-2.4,-4.8,-6.24,-6.72,-6.72]},{"name":"Full Treble","default":true,"gains":[-5.76,-5.76,-5.76,-2.4,1.44,6.72,9.6,9.6,9.6,10.08]},{"name":"Laptop Speakers","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Full Bass & Treble","default":true,"gains":[4.32,3.36,0,-4.32,-2.88,0.96,4.8,6.72,7.2,7.2]}],"whitelist":[],"version":"0.1.2","selected":{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]}})</script></html>